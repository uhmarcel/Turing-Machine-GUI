{"version":3,"sources":["Components/Display.js","Extras/example-programs.js","Components/Subcomponents/ProgramDropdown.js","Components/Control.js","Custom-mode/TM-custom.js","Components/Editor.js","Classes/TuringMachine.js","Classes/Instruction.js","Classes/Program.js","App.js","serviceWorker.js","index.js"],"names":["Display","state","displayValue","_this","props","TM","toString","focus","updateInput","_callee","e","regenerator_default","a","wrap","_context","prev","next","setState","target","value","stop","processInput","_callee2","_this$props","updateTM","input","_context2","test","setInput","setFocusOff","setFocusOn","this","_this$state","react_default","createElement","Container","fluid","className","InputGroup","size","Input","type","name","spellCheck","onFocus","onChange","onBlur","InputGroupAddon","addonType","InputGroupText","style","border","getState","getOutput","Component","binaryAddition","samplePrograms","sampleInput","code","layoutStyles","display","iconStyles","borderRadius","color","width","height","marginTop","marginRight","padding","background","ProgramDropdown","dropdownOpen","toggle","prevState","onSelection","programIndex","_samplePrograms$progr","_this2","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","map","program","key","onClick","Control","play","simulationReset","stopSimulation","resetTape","simulationBack","_this$props2","stepBack","simulationStep","_callee3","_this$props3","_context3","isDone","step","simulationPlay","_callee4","_context4","setInterval","clearInterval","simulationFastforward","_callee5","_this$props4","_context5","_callee6","_context6","getPlayIcon","faPause","faPlay","getPlayStyle","paddingLeft","playIcon","Subcomponents_ProgramDropdown","onProgramSelection","Button","index_es","icon","faUndoAlt","faArrowLeft","faArrowRight","faFastForward","CodeMirror","defineSimpleMode","start","regex","token","meta","lineComment","Editor","previousCodeLength","updateCode","updateProgram","loadCode","handleChange","editor","data","defaultCode","length","react_codemirror2","onBeforeChange","options","mode","theme","lineNumbers","TuringMachine","Object","classCallCheck","tape","position","previous","index","substring","i","charAt","push","s","d","t","r","n","pushState","indexedMap","direction","targets","replace","nextState","formatTape","_this$previous$pop","pop","toConsumableArray","current","isNonEnding","output","leadingEmpty","Instruction","out","Program","instructions","c","fastNotation","subNotationG","subNotation","lines","split","clear","forEach","line","groups","match","terms","term","subgroups","addInstruction","App","setDefaultCode","Components_Display","Components_Control","Components_Editor","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8697215c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\r\n\r\nimport '../Css/Display.css';\r\n\r\n\r\nclass Display extends Component {\r\n    \r\n    state = {\r\n        displayValue: this.props.TM.toString(),\r\n        focus: false\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {TM} = this.props;\r\n        const {displayValue, focus} = this.state;\r\n        if (displayValue !== TM.toString() && !focus) {\r\n            this.setState({displayValue: TM.toString()});\r\n        }\r\n    }\r\n    \r\n\r\n    updateInput = async (e) => {\r\n        this.setState({displayValue: e.target.value});\r\n    }\r\n\r\n    processInput = async (e) => {\r\n        const {TM, updateTM} = this.props;\r\n        const input = e.target.value;\r\n        const r = /.*(?:\\[|\\])/g;\r\n        if (!r.test(input)) {\r\n            TM.setInput(input);\r\n            await updateTM();\r\n        }\r\n        this.setFocusOff();\r\n    }\r\n\r\n    setFocusOn = () => {\r\n        this.setState({focus: true});\r\n    }\r\n\r\n    setFocusOff = () => {\r\n        this.setState({focus: false});\r\n    }\r\n\r\n    render() {\r\n        const {displayValue} = this.state;\r\n        const {TM} = this.props;\r\n        return (\r\n            <Container fluid className='d-flex align-items-center Display' >\r\n                <div className='w-100'>\r\n                    <h6>Turing Machine Simulation</h6>\r\n                    <InputGroup size='sm'>\r\n                        <Input \r\n                            type='text' \r\n                            name='tmDisplay' \r\n                            spellCheck='false' \r\n                            className='DisplayArea'\r\n                            value={displayValue}\r\n                            onFocus={this.setFocusOn}\r\n                            onChange={this.updateInput}\r\n                            onBlur={this.processInput}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                            <InputGroupText style={{border:'none'}}>{'q' + TM.getState()}</InputGroupText>\r\n                        </InputGroupAddon>  \r\n                    </InputGroup>\r\n                    <span className='OutputText'>{'Output: ' + TM.getOutput()}</span>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Display","\r\nexport const arithMultiply = \r\n`# Multiply TM program\r\n# Outputs the multiplication of two inputs on alphabet {1}*\r\n\r\n# For each multiplicand, copy input to end of tape\r\nq0]r (#, q1) (1, q0)\r\nq1]r (1/Y, q2) (#, q8)    \r\nq2]l (#, q3)\r\n\r\n# Copy first input at end of tape\r\nq3]l (1/X, q4) (#, q0)   \r\nq4]r (#, q5)        \r\nq5]r (#, q6)\r\nq6]r (#/1, q7)\r\nq7]l (X/1, q3)          \r\n\r\n# All multiplicands processed, finish \r\nq8]l (Y/1, q8) (#, q9)\r\nq9]r (#, qh)`\r\n\r\nexport const binaryAddition =\r\n`# Binary addition TM program\r\n# Outputs the addition of a set of binary numbers.\r\n# Accepts multiple binary numbers of any length.\r\n\r\n# Mark start of tape\r\nq0]r (1, q1) (0, q1) \r\nq1]l (#/S, q2)\r\n\r\n# Mark end of tape\r\nq2]r (#, q3)\r\nq3]r (#, q4) (1, q2) (0, q2)\r\nq4]l (#/E, q5)\r\nq5]l (S, q6)\r\n\r\n# Make enough space for output\r\nq6]r (1/X, q7) (0/Y, q7) (#/C, q10) (E/#, q13) \r\n\tq7]r (E, q8)\r\n\tq8]r (#/0, q9) (A/0, q9)\r\n\tq9]l (X/1, q6) (Y/0, q6)\r\n\r\n\tq10]r (E, q11)\r\n\tq11]r (0/A, q11) (#/A, q12)\r\n    q12]l (C/#, q6) \r\n\r\n# Set new marks for current input and end of tape\r\nq13]r (A/0, q13) (#/0,q14)\r\nq14]r (#/E, q15)\r\nq15]l (S/#, q16)\r\nq16]r (#/C, q17)\r\n\r\n# Add current input to output sum\r\nq17]l (1/X, q18) (0/Y, q21) (#, q24)\r\n\tq18]r (X/1, q19) (Y/0, q19) (E, q19)\r\n    q19]l (1/Y, q20) (0/X, q23)\r\n    q20]l (1/0, q20) (0/1, q23)\r\n    \r\n    q21]r (X/1, q22) (Y/0, q22) (E, q22)\r\n    q22]l (1/X, q23) (0/Y, q23)\r\n    \r\n    q23]l (X/1, q17) (Y/0, q17)\r\n   \r\n# Reset tokens and repeat sum with next input   \r\nq24]r (C/#, q25)\r\nq25]r (#/C, q26) (E/#, q28)\r\nq26]r (X/1, q27) (Y/0, q27)\r\nq27]l (C, q17)\r\n\r\n# Move to final output position, clear unused zeroes and halt\r\nq28]l (X/1, q29) (Y/0, q29)\r\nq29]l (#, q30)\r\nq30]r (1, q31) (#, qh)\r\nq31]l (0/#, qh) (#, qh)\r\nq32]l (0, q31)\r\n`\r\n \r\nexport const copyPaste = \r\n`# CopyPaste TM program\r\n# Returns an input on {1,0}* replicated.\r\n\r\nq0]r (1/X, q1) (0/Y, q2) (#, qh)\r\nq1]r (#/N, q6)\r\nq2]r (#/M, q6)\r\nq3]r (1/X, q4) (0/Y, q5) (N/1, q7) (M/0, q7)\r\nq4]r (#/1, q6)\r\nq5]r (#/0, q6)\r\nq6]l (X/1, q3) (Y/0, q3) \r\nq7]l (#, qh)`\r\n\r\nexport const reverse = \r\n`# Reverse TM program\r\n# Reverses the input string on {0,1}*.\r\n\r\nq0]r (#, q1)\r\nq1]l (1/X, q2) (0/Y, q4) (#, q7)\r\nq2]r (#, q3)\r\nq3]r (#/1, q6)\r\nq4]r (#, q5)\r\nq5]r (#/0, q6)\r\nq6]l (X/1, q1) (Y/0, q1)\r\nq7]r (#, qh)`\r\n\r\nexport const successor = \r\n`# Successor TM program\r\n# Outputs the successor of an input decimal number\r\n\r\nq0]r (#, q1)\r\nq1]l (0/1, q2) (1/2, q2) (2/3, q2) (3/4, q2) (4/5, q2) (5/6, q2) (6/7, q2) (7/8, q2) (8/9, q2) (9/0, q1) (#, q3)\r\nq2]l (#, qh)\r\n\r\n# Make space for carry\r\nq3]r (#/0, q4)\r\nq4]l (#, q5)\r\nq5]r (0/1, q2)`\r\n\r\nexport const decimalSum = \r\n`# Decimal Addition TM program\r\n# Outputs the sum of two decimal numbers\r\n\r\n# Decrease first operand by one\r\nq0]r (#, q1)\r\nq1]l (0/9, q1) (1/0, q2) (2/1, q2) (3/2, q2) (4/3, q2) (5/4, q2) (6/5, q2) (7/6, q2) (8/7, q2) (9/8, q2) (#, q9)\r\nq2]r (#, q3)\r\n\r\n# Increase second operand by one\r\nq3]r (#, q4)\r\nq4]l (0/1, q5) (1/2, q5) (2/3, q5) (3/4, q5) (4/5, q5) (5/6, q5) (6/7, q5) (7/8, q5) (8/9, q5) (9/0, q4) (#, q6)\r\nq5]l (#, q1) \r\n\r\n\t# Carry over\r\n\tq6]r (#/0, q7)\r\n\tq7]l (#, q8)\r\n\tq8]r (0/1, q5)\r\n\r\n# Clean and finish\r\nq9]r (9/#, q9) (#, qh)`\r\n\r\n\r\nexport const samplePrograms = [\r\n    {\r\n        \"name\": \"Arithmetic Multiply\",\r\n        \"sampleInput\": \"1111#11\",\r\n        \"code\": arithMultiply\r\n    },\r\n    {\r\n        \"name\": \"Binary Addition\",\r\n        \"sampleInput\": \"11101#10110\",\r\n        \"code\": binaryAddition\r\n    },\r\n    {\r\n        \"name\": \"Copy Paste\",\r\n        \"sampleInput\": \"10110\",\r\n        \"code\": copyPaste\r\n    },\r\n    {\r\n        \"name\": \"Reverse\",\r\n        \"sampleInput\": \"11001\",\r\n        \"code\": reverse\r\n    },\r\n    {\r\n        \"name\": \"Decimal Successor\",\r\n        \"sampleInput\": \"2019\",\r\n        \"code\": successor\r\n    },\r\n    {\r\n        \"name\": \"Decimal Addition\",\r\n        \"sampleInput\": \"12#4\",\r\n        \"code\": decimalSum\r\n    }\r\n]","import React, { Component } from 'react';\r\nimport { ButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\r\nimport { samplePrograms } from '../../Extras/example-programs';\r\n\r\nconst layoutStyles = {\r\n    display: 'inline'\r\n}\r\n\r\nconst iconStyles = {\r\n    borderRadius: '50%',\r\n    color: '#444',\r\n    width: '21px',\r\n    height: '21px',\r\n    marginTop: '-10px',\r\n    marginRight: '10px',\r\n    padding: '1px 3px 0px 0px',\r\n    background: '#b0c3cf',\r\n    border: 'none'\r\n}\r\n\r\nclass ProgramDropdown extends Component {\r\n    \r\n    state = {\r\n        dropdownOpen: false\r\n    }\r\n    \r\n    toggle = () => {\r\n        this.setState(prevState => ({dropdownOpen: !prevState.dropdownOpen}));\r\n    }\r\n\r\n    onSelection = (programIndex) => {\r\n        const {code, sampleInput} = samplePrograms[programIndex];\r\n        if (this.props.onSelection) {\r\n            this.props.onSelection(code, sampleInput);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ButtonDropdown size='sm' isOpen={this.state.dropdownOpen} toggle={this.toggle} style={layoutStyles}>\r\n                <DropdownToggle caret  style={iconStyles}/>\r\n                <DropdownMenu>\r\n                    <DropdownItem header>Programs</DropdownItem>\r\n                    <DropdownItem divider />\r\n                    {samplePrograms.map( (program, key) => \r\n                        <DropdownItem onClick={() => this.onSelection(key)} key={key}>\r\n                            {program.name}\r\n                        </DropdownItem>\r\n                    )}\r\n                </DropdownMenu>\r\n            </ButtonDropdown>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgramDropdown;","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndoAlt, faArrowLeft, faArrowRight, faPlay, faPause, faFastForward } from '@fortawesome/free-solid-svg-icons';\r\nimport ProgramDropdown from './Subcomponents/ProgramDropdown';\r\n\r\nimport '../Css/Control.css';\r\n\r\n\r\nclass Control extends Component {\r\n\r\n    state = {\r\n        play: null\r\n    }\r\n\r\n    simulationReset = async () => {\r\n        const {TM, updateTM} = this.props;\r\n        this.stopSimulation();\r\n        TM.resetTape();\r\n        TM.setInput(TM.input);\r\n        updateTM();\r\n    }\r\n\r\n    simulationBack = async () => {\r\n        const {TM, updateTM} = this.props;\r\n        this.stopSimulation();\r\n        TM.stepBack();\r\n        updateTM();\r\n    }\r\n\r\n    simulationStep = async () => {\r\n        const {TM, program, updateTM} = this.props;\r\n        if (TM.isDone())\r\n            this.stopSimulation();\r\n        TM.step(program);\r\n        updateTM();\r\n    } \r\n\r\n    simulationPlay = async () => {\r\n        let {play} = this.state;\r\n        if (play === null) {\r\n            play = setInterval(this.simulationStep, 200);\r\n        }\r\n        else {\r\n            clearInterval(play);\r\n            play = null;\r\n        }\r\n        this.setState({play});\r\n    }\r\n\r\n    simulationFastforward = async () => {\r\n        const {TM, program, updateTM} = this.props;\r\n        this.stopSimulation();\r\n        while (!TM.isDone()) {\r\n            TM.step(program);\r\n        }\r\n        updateTM();\r\n    }\r\n\r\n    stopSimulation = async () => {\r\n        const {play} = this.state;\r\n        if (play !== null) {\r\n            clearInterval(play);\r\n            this.setState({play: null});\r\n        }\r\n    }\r\n\r\n    getPlayIcon = () => {\r\n        const {play} = this.state;\r\n        return play ? faPause : faPlay;\r\n    }\r\n\r\n    getPlayStyle = () => {\r\n        const {play} = this.state;\r\n        return play ? {} : {paddingLeft:'8px'};\r\n    }\r\n\r\n    render() {\r\n        const playIcon = this.getPlayIcon();\r\n        return (\r\n            <div className='container-fluid ControlPanel'>\r\n                <ProgramDropdown \r\n                    className='float-left'\r\n                    onSelection={this.props.onProgramSelection}\r\n                />\r\n                <div className='EditorMsg'>Editor</div>\r\n                <div className='float-right'>\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationReset}><FontAwesomeIcon icon={faUndoAlt}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationBack}><FontAwesomeIcon icon={faArrowLeft}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationStep}><FontAwesomeIcon icon={faArrowRight}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationPlay} style={this.getPlayStyle()}><FontAwesomeIcon icon={playIcon} style={{height: '15px'}}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationFastforward}><FontAwesomeIcon icon={faFastForward}/></Button>    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Control;","import CodeMirror from 'codemirror';\r\nimport 'codemirror/addon/mode/simple'\r\n\r\n\r\nCodeMirror.defineSimpleMode(\"tm-custom\", {\r\n    start: [\r\n      {\r\n        regex: /^(q[0-9]+])\\s*([rl])/, \r\n        token: [\"tag\", \"atom\"]\r\n      },\r\n      {\r\n        regex: /\\(\\s*(?:.\\s*\\/\\s*.\\s*|.\\s*),\\s*(q(?:h|[0-9]+))\\s*\\)/,\r\n        token: [\"attribute\"]\r\n      },\r\n      {\r\n        regex: /#.*/, \r\n        token: \"comment\"\r\n      } \r\n    ],\r\n    meta: {\r\n      lineComment: \"#\"\r\n    }\r\n  });\r\n  ","import React, { Component } from 'react';\r\nimport { Controlled as CodeMirror} from 'react-codemirror2';\r\n\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/xq-light.css';\r\nimport '../Custom-mode/TM-custom.js';\r\nimport '../Css/Editor.css';\r\n\r\n\r\nclass Editor extends Component {\r\n\r\n    state = {\r\n        previousCodeLength: null,\r\n        code: ''\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {defaultCode} = this.props;\r\n        const {previousCodeLength} = this.state;\r\n        if (defaultCode.length !== previousCodeLength) {            \r\n            this.setState({previousCodeLength: defaultCode.length});\r\n            this.updateCode(defaultCode);\r\n        }\r\n    }\r\n\r\n\r\n    updateCode = async(code) => {\r\n        const { program, updateProgram } = this.props;\r\n        this.setState({code});\r\n        program.loadCode(code);\r\n        updateProgram();\r\n    }\r\n\r\n    handleChange = async (editor, data, code) => {\r\n        this.updateCode(code);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{height:'calc(100% - 200px'}}>\r\n                <CodeMirror \r\n                    value={this.state.code} \r\n                    onBeforeChange={this.handleChange}\r\n                    options = {{\r\n                        mode: 'tm-custom',\r\n                        theme: 'xq-light',\r\n                        lineNumbers: true\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Editor","\r\nclass TuringMachine {\r\n\r\n    constructor() {\r\n        this.input = '';\r\n        this.tape = ['#'];\r\n        this.position = 0;\r\n        this.state = 0;\r\n        this.previous = []        \r\n    }\r\n\r\n    resetTape() {\r\n        this.tape = ['#'];\r\n        this.position = 0;\r\n        this.state = 0;\r\n        this.previous = [];\r\n    }\r\n\r\n    setInput(input) {\r\n        this.resetTape();\r\n        let index = this.position;\r\n        \r\n        while (input[0] === '#') \r\n            input = input.substring(1);\r\n        while (input[input.length-1] === '#') \r\n            input = input.substring(0,input.length-1);\r\n        this.input = input;\r\n        \r\n        for (let i=0; i<input.length; i++) {\r\n            this.tape[index + i + 1] = input.charAt(i);\r\n        }\r\n        this.tape.push('#');\r\n    }\r\n\r\n    step(program) {\r\n        if (this.isDone()) {\r\n            return;\r\n        }\r\n        this.pushState();\r\n        \r\n        if (this.position === this.tape.length - 1) \r\n            this.tape.push('#');\r\n        \r\n        let s, d, t, r, n;\r\n        s = this.state\r\n        d = program.indexedMap[s].direction;\r\n        this.position += d ?  1 : -1;\r\n        if (this.position < 0) return;\r\n        t = this.tape[this.position];\r\n\r\n        if (program.indexedMap[s].targets[t] != null) {\r\n            r = program.indexedMap[s].targets[t].replace;\r\n            n = program.indexedMap[s].targets[t].nextState;\r\n        }\r\n        else {\r\n            r = t;\r\n            n = s;\r\n        }\r\n\r\n        this.tape[this.position] = r;\r\n        this.state = n;\r\n\r\n        this.formatTape();\r\n        \r\n        return this.toString();\r\n    }\r\n\r\n    stepBack() {\r\n        if (this.previous.length !== 0) {\r\n            let {tape, position, state} = this.previous.pop();\r\n            this.tape = [...tape];\r\n            this.position = position;\r\n            this.state = state;\r\n        }\r\n    }\r\n\r\n    pushState() {\r\n        let current = {\r\n            tape: [...this.tape],\r\n            position: this.position,\r\n            state: this.state    \r\n        }\r\n        this.previous.push(current);\r\n    }\r\n\r\n    getOutput() {\r\n        if (!this.isDone())  return '';\r\n        if (this.isNonEnding())  return 'undefined';\r\n\r\n        let output = '';\r\n        for (let i = this.position + 1; i < this.tape.length - 1; i++) \r\n            output += this.tape[i];\r\n        if (output === '') \r\n            return '\\u03BB';\r\n        return output;\r\n    }\r\n\r\n    isDone() {\r\n        return  (this.state === 'h') || this.isNonEnding();\r\n    }\r\n\r\n    isNonEnding() {\r\n        return (this.position > 512) || (this.position < 0)\r\n    }\r\n\r\n    formatTape() {\r\n        while (this.tape.length > 2 && this.position < this.tape.length - 1 && this.tape[this.tape.length - 2] === '#') {\r\n            this.tape.pop();\r\n        }\r\n    }\r\n\r\n    toString() {\r\n        let output = \"\";\r\n        let leadingEmpty = true;\r\n        for (let i=0; i<this.tape.length; i++) {\r\n            if (leadingEmpty && this.tape[i] === '#' && this.tape[i+1] === '#' && i !== this.position)\r\n                continue;\r\n            leadingEmpty = false;\r\n            if (i === this.position) \r\n                output += '[' + this.tape[i] + ']';\r\n            else \r\n                output += this.tape[i];\r\n        }\r\n        return output;\r\n    }\r\n\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n}\r\n\r\nexport default TuringMachine;","\r\nclass Instruction {\r\n\r\n    constructor(state, direction, target, replace, nextState) {\r\n        this.state = state;\r\n        this.direction = direction;\r\n        this.target = target;\r\n        this.replace = replace;\r\n        this.nextState = nextState\r\n    }\r\n\r\n    toString() {\r\n        let out = \"\";\r\n        out += \"q\" + this.state + \"]\";\r\n        out += this.direction ? \"r\" : \"l\";\r\n        out += \"(\" + this.target + \"/\" + this.replace + \",q\" + this.nextState + \")\";\r\n        return out;\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Instruction;","import Instruction from './Instruction';\r\n\r\nclass Program {\r\n\r\n    constructor() {\r\n        this.instructions = [];\r\n        this.indexedMap = {};\r\n    }\r\n\r\n    addInstruction(c) {\r\n        this.instructions.push(c);\r\n        if (this.indexedMap[c.state] == null) {\r\n            this.indexedMap[c.state] = {\r\n                direction: null,\r\n                targets: {}\r\n            }\r\n        }\r\n        this.indexedMap[c.state]['direction'] = c.direction;\r\n        this.indexedMap[c.state]['targets'][c.target] = {\r\n            replace: c.replace,\r\n            nextState: c.nextState\r\n        };\r\n    }\r\n\r\n    loadCode(code) {\r\n        let lines = code.split(/\\r?\\n/);\r\n        \r\n        let fastNotation, subNotationG,subNotation;\r\n        fastNotation = /^q([0-9]+)\\]([lr])(\\(.\\/.,q(?:h|[0-9]+)\\))*(#.*)?$/;\r\n        subNotationG = /\\((.)\\/(.),q((?:h|[0-9]+))\\)/g; // (n/m,q)\r\n        subNotation = /\\((.)\\/(.),q((?:h|[0-9]+))\\)/; // (n/m,q)\r\n\r\n        this.clear();\r\n\r\n        lines.forEach( (line) => {\r\n            line = line.replace(/\\s+/g, '');\r\n            line = line.replace(/\\((.),q((?:h|[0-9]+))\\)/g, \"($1/$1,q$2)\");\r\n\r\n            let groups = line.match(fastNotation);\r\n            if (groups != null) {\r\n                let s, d, t, r, n;\r\n                s = groups[1];\r\n                d = groups[2] === 'r' ? true : false;\r\n\r\n                let terms = line.match(subNotationG);\r\n                if (terms != null) {\r\n                    terms.forEach( (term) => {\r\n                        let subgroups = term.match(subNotation);\r\n                        if (subgroups != null) {\r\n                            t = subgroups[1]; \r\n                            r = subgroups[2];\r\n                            n = subgroups[3];\r\n                            this.addInstruction(new Instruction(s,d,t,r,n));\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    clear() {\r\n        this.instructions = [];\r\n        this.indexedMap = {};\r\n    }\r\n\r\n    toString() {\r\n        let output = \"\";\r\n        this.instructions.forEach( (c) => {\r\n            output += c.toString() + '\\n';\r\n        })\r\n        return output;\r\n    }\r\n\r\n}\r\n\r\nexport default Program;","import React, { Component } from 'react';\nimport Display from './Components/Display';\nimport Control from './Components/Control';\nimport Editor from './Components/Editor';\nimport './Css/App.css'\n\nimport TuringMachine from './Classes/TuringMachine';\nimport Program from './Classes/Program';\nimport { binaryAddition } from './Extras/example-programs';\n\nclass App extends Component {\n\n  state = {\n    TM: new TuringMachine(),\n    program: new Program(),\n    defaultCode: ''\n  }\n\n  componentDidMount() {\n    this.setDefaultCode(binaryAddition, '11011#10110');\n  }\n\n  updateTM = async () => {\n    const {TM} = this.state;\n    this.setState({TM});\n  }\n\n  updateProgram = async () => {\n    const {program} = this.state;\n    this.setState({program});\n  }\n\n  setDefaultCode = (code, input) => {\n    const {TM} = this.state; \n    TM.setInput(input);\n    this.setState({defaultCode: code});\n    this.updateTM();\n  }\n\n  render() {\n    const {TM, program, defaultCode} = this.state;\n    return (\n      <div className='App'>\n        <Display \n          TM={TM}\n          updateTM={this.updateTM} \n        />\n        <Control\n          TM={TM}\n          program={program} \n          updateTM={this.updateTM} \n          updateProgram={this.updateProgram} \n          onProgramSelection={this.setDefaultCode}\n        />\n        <Editor \n          defaultCode={defaultCode}\n          TM={TM}\n          program={program} \n          updateTM={this.updateTM} \n          updateProgram={this.updateProgram} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}