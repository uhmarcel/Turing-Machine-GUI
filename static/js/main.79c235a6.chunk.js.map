{"version":3,"sources":["Components/Display.js","Components/Control.js","Extras/default-code.js","Custom-mode/tm-custom.js","Components/Editor.js","Classes/Instruction.js","Classes/Program.js","Classes/TuringMachine.js","App.js","serviceWorker.js","index.js"],"names":["styles","height","background","color","font","displayArea","letterSpacing","border","outputText","Display","state","displayValue","_this","props","TM","toString","focus","updateInput","_callee","e","regenerator_default","a","wrap","_context","prev","next","setState","target","value","stop","processInput","_callee2","_this$props","updateTM","input","_context2","test","setInput","setFocusOff","setFocusOn","this","_this$state","react_default","createElement","Container","fluid","style","className","Input","type","name","spellCheck","onFocus","onChange","onBlur","Component","Control","play","simulationReset","resetTape","simulationBack","console","log","simulationStep","_callee3","_this$props2","program","_context3","step","simulationPlay","_callee4","_context4","setInterval","clearInterval","simulationFastforward","_callee5","_this$props3","_context5","isDone","Button","onClick","index_es","icon","faUndoAlt","faArrowLeft","faArrowRight","paddingLeft","faPlay","faFastForward","defaultCode","CodeMirror","defineSimpleMode","start","regex","token","meta","lineComment","Editor","code","updateCode","updateProgram","loadCode","handleChange","editor","data","react_codemirror2","onBeforeChange","options","mode","theme","lineNumbers","Instruction","direction","replace","nextState","Object","classCallCheck","out","Program","instructions","indexedMap","c","push","targets","fastNotation","subNotationG","subNotation","lines","split","clear","forEach","line","groups","match","s","d","t","r","n","terms","term","subgroups","addInstruction","output","TuringMachine","tape","position","index","i","length","charAt","char","App","Components_Display","Components_Control","Components_Editor","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79c235a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Input } from 'reactstrap';\r\n\r\nconst styles = {\r\n    height: '90px',\r\n    background: '#90a4be',\r\n    color: '#111',\r\n    font: '10px'\r\n}\r\n\r\nconst displayArea = {\r\n    font: '14px monospace',\r\n    letterSpacing: '1px',\r\n    height: '28px',\r\n    border: 'none'\r\n}\r\n\r\nconst outputText = {\r\n    font: '12px monospace'\r\n}\r\n\r\n\r\nclass Display extends Component {\r\n    \r\n    state = {\r\n        displayValue: this.props.TM.toString(),\r\n        focus: false\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {TM} = this.props;\r\n        const {displayValue, focus} = this.state;\r\n        if (displayValue !== TM.toString() && !focus) {\r\n            this.setState({displayValue: TM.toString()});\r\n        }\r\n    }\r\n    \r\n\r\n    updateInput = async (e) => {\r\n        this.setState({displayValue: e.target.value});\r\n    }\r\n\r\n    processInput = async (e) => {\r\n        const {TM, updateTM} = this.props;\r\n        const input = e.target.value;\r\n        const r = /.*(?:\\[|\\])/g;\r\n        if (!r.test(input)) {\r\n            TM.setInput(input);\r\n            await updateTM();\r\n        }\r\n        this.setFocusOff();\r\n    }\r\n\r\n    setFocusOn = () => {\r\n        this.setState({focus: true});\r\n    }\r\n\r\n    setFocusOff = () => {\r\n        this.setState({focus: false});\r\n    }\r\n\r\n    render() {\r\n        const {displayValue} = this.state;\r\n        return (\r\n            <Container fluid style={styles} className='d-flex align-items-center' >\r\n                <div className='w-100'>\r\n                    <h6>Turing Machine Simulator</h6>\r\n                    <Input \r\n                        type='text' \r\n                        name='tmDisplay' \r\n                        spellCheck='false' \r\n                        className='w-100 mt-0' \r\n                        style={displayArea} \r\n                        value={displayValue}\r\n                        onFocus={this.setFocusOn}\r\n                        onChange={this.updateInput}\r\n                        onBlur={this.processInput}\r\n                    />\r\n                    <span className='container' style={outputText}>Output: 11101</span>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Display","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUndoAlt, faArrowLeft, faArrowRight, faPlay, faFastForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport '../Css/Control.css';\r\n\r\n\r\nclass Control extends Component {\r\n\r\n    state = {\r\n        play: null\r\n    }\r\n\r\n    simulationReset = async () => {\r\n        const {TM, updateTM} = this.props;\r\n        TM.resetTape();\r\n        TM.setInput(TM.input);\r\n        updateTM();\r\n    }\r\n\r\n    simulationBack = async () => {\r\n        console.log('Not yet implemented');\r\n    }\r\n\r\n    simulationStep = async () => {\r\n        const {TM, program, updateTM} = this.props;\r\n        TM.step(program);\r\n        updateTM();\r\n    } \r\n\r\n    simulationPlay = async () => {\r\n        let {play} = this.state;\r\n        if (play === null) {\r\n            play = setInterval(this.simulationStep, 200);\r\n        }\r\n        else {\r\n            clearInterval(play);\r\n            play = null;\r\n        }\r\n        this.setState({play});\r\n    }\r\n\r\n    simulationFastforward = async () => {\r\n        const {TM, program, updateTM} = this.props;\r\n        while (!TM.isDone()) {\r\n            TM.step(program);\r\n        }\r\n        updateTM();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container-fluid ControlPanel'>\r\n                <span>Editor</span>\r\n                <div className='float-right'>\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationReset}><FontAwesomeIcon icon={faUndoAlt}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton'><FontAwesomeIcon icon={faArrowLeft}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationStep}><FontAwesomeIcon icon={faArrowRight}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationPlay} style={{paddingLeft:'8px'}}><FontAwesomeIcon icon={faPlay} style={{height: '15px'}}/></Button>{'  '}\r\n                    <Button color='light' className='ControlButton' onClick={this.simulationFastforward}><FontAwesomeIcon icon={faFastForward}/></Button>    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Control;","\r\nexport const defaultCode = \r\n`# Multiply TM program\r\n# Outputs the multiplication of two inputs on alphabet {1}*\r\n\r\n# For each multiplicand, copy input to end of tape\r\nq0]r (#, q1) (1, q0)\r\nq1]r (1/M, q2) (#, q8)    # Mark current multiplicand, and copy input\r\nq2]l (#, q3)\r\n\r\n# Copy first input at end of tape\r\nq3]l (1/X, q4) (#, q0)    # Mark current char being copied\r\nq4]r (#, q5)        \r\nq5]r (#, q6)\r\nq6]r (#/1, q7)\r\nq7]l (X/1, q3)            # Remove mark and recover\r\n\r\n# All multiplicands processed, finish \r\nq8]l (M/1, q8) (#, q9)\r\nq9]r (#, q-1)`","import CodeMirror from 'codemirror';\r\nimport 'codemirror/addon/mode/simple'\r\n\r\n\r\nCodeMirror.defineSimpleMode(\"tm-custom\", {\r\n    start: [\r\n      {\r\n        regex: /^(q[0-9]+])\\s*([rl])/, \r\n        token: [\"tag   \", \"atom  \"]\r\n      },\r\n      {\r\n        regex: /\\(\\s*(?:.\\s*\\/\\s*.\\s*|.\\s*),\\s*(q-?[0-9]+)\\s*\\)/,\r\n        token: [\"attribute  \"]\r\n      },\r\n      {\r\n        regex: /#.*/, \r\n        token: \"comment\"\r\n      } \r\n    ],\r\n    meta: {\r\n      lineComment: \"#\"\r\n    }\r\n  });\r\n  ","import React, { Component } from 'react';\r\nimport { Controlled as CodeMirror} from 'react-codemirror2';\r\nimport { defaultCode } from '../Extras/default-code'\r\n\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/xq-light.css';\r\nimport '../Custom-mode/tm-custom.js';\r\nimport '../Css/Editor.css';\r\n\r\n\r\nclass Editor extends Component {\r\n\r\n    state = {\r\n        code: defaultCode\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {code} = this.state;\r\n        this.updateCode(code);\r\n    }\r\n\r\n    updateCode = async(code) => {\r\n        const { program, updateProgram } = this.props;\r\n        this.setState({code});\r\n        program.loadCode(code);\r\n        updateProgram();\r\n    }\r\n\r\n    handleChange = async (editor, data, code) => {\r\n        this.updateCode(code);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{height:'calc(100% - 55px'}}>\r\n                <CodeMirror \r\n                    value={this.state.code} \r\n                    onBeforeChange={this.handleChange}\r\n                    options = {{\r\n                        mode: 'tm-custom',\r\n                        theme: 'xq-light',\r\n                        lineNumbers: true\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Editor","\r\nclass Instruction {\r\n\r\n    constructor(state, direction, target, replace, nextState) {\r\n        this.state = state;\r\n        this.direction = direction;\r\n        this.target = target;\r\n        this.replace = replace;\r\n        this.nextState = nextState\r\n    }\r\n\r\n    toString() {\r\n        let out = \"\";\r\n        out += \"q\" + this.state + \"]\";\r\n        out += this.direction ? \"r\" : \"l\";\r\n        out += \"(\" + this.target + \"/\" + this.replace + \",q\" + this.nextState + \")\";\r\n        return out;\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Instruction;","import Instruction from './Instruction';\r\n\r\nclass Program {\r\n\r\n    constructor() {\r\n        this.instructions = [];\r\n        this.indexedMap = {};\r\n    }\r\n\r\n    addInstruction(c) {\r\n        this.instructions.push(c);\r\n        if (this.indexedMap[c.state] == null) {\r\n            this.indexedMap[c.state] = {\r\n                direction: null,\r\n                targets: {}\r\n            }\r\n        }\r\n        this.indexedMap[c.state]['direction'] = c.direction;\r\n        this.indexedMap[c.state]['targets'][c.target] = {\r\n            replace: c.replace,\r\n            nextState: c.nextState\r\n        };\r\n    }\r\n\r\n    loadCode(code) {\r\n        let lines = code.split(/\\r?\\n/);\r\n        \r\n        let fastNotation, subNotationG,subNotation, shortcut;\r\n        fastNotation = /^q([0-9]+)\\]([lr])(\\(.\\/.,q-?[0-9]+\\))*(#.*)?$/;\r\n        subNotationG = /\\((.)\\/(.),q(-?[0-9]+)\\)/g; // (n/m,q)\r\n        subNotation = /\\((.)\\/(.),q(-?[0-9]+)\\)/; // (n/m,q)\r\n\r\n        this.clear();\r\n\r\n        lines.forEach( (line) => {\r\n            line = line.replace(/\\s+/g, '');\r\n            line = line.replace(/\\((.),q(-?[0-9]+)\\)/g, \"($1/$1,q$2)\");\r\n\r\n            let groups = line.match(fastNotation);\r\n            if (groups != null) {\r\n                let s, d, t, r, n;\r\n                s = groups[1];\r\n                d = groups[2] == 'r' ? true : false;\r\n\r\n                let terms = line.match(subNotationG);\r\n                if (terms != null) {\r\n                    terms.forEach( (term) => {\r\n                        let subgroups = term.match(subNotation);\r\n                        if (subgroups != null) {\r\n                            t = subgroups[1]; \r\n                            r = subgroups[2];\r\n                            n = subgroups[3];\r\n                            this.addInstruction(new Instruction(s,d,t,r,n));\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }) \r\n    }\r\n\r\n    clear() {\r\n        this.instructions = [];\r\n        this.indexedMap = {};\r\n    }\r\n\r\n    toString() {\r\n        let output = \"\";\r\n        this.instructions.forEach( (c) => {\r\n            output += c.toString() + '\\n';\r\n        })\r\n        return output;\r\n    }\r\n\r\n}\r\n\r\nexport default Program;","\r\nclass TuringMachine {\r\n\r\n    constructor() {\r\n        this.tape = ['#'];\r\n        this.position = 0;\r\n        this.state = 0;\r\n        this.input = null;\r\n    }\r\n\r\n    resetTape() {\r\n        this.tape = ['#'];\r\n        this.position = 0;\r\n        this.state = 0;\r\n    }\r\n\r\n    setInput(input) {\r\n        this.resetTape();\r\n        let index = this.position;\r\n        this.input = input;\r\n        for (let i=0; i<input.length; i++) {\r\n            this.tape[index + i + 1] = input.charAt(i);\r\n        }\r\n        this.tape.push('#');\r\n    }\r\n\r\n    step(program) {\r\n        if (this.isDone()) {\r\n            console.log('stop')\r\n            return;\r\n        }\r\n        if (this.position === this.tape.length - 1) \r\n            this.tape.push('#');\r\n        \r\n        let s, d, t, r, n;\r\n        s = this.state\r\n        d = program.indexedMap[s].direction;\r\n        this.position += d ?  1 : -1;\r\n        t = this.tape[this.position];\r\n\r\n        if (program.indexedMap[s].targets[t] != null) {\r\n            r = program.indexedMap[s].targets[t].replace;\r\n            n = program.indexedMap[s].targets[t].nextState;\r\n        }\r\n        else {\r\n            r = t;\r\n            n = s;\r\n        }\r\n\r\n        this.tape[this.position] = r;\r\n        this.state = n;\r\n\r\n        return this.toString();\r\n    }\r\n\r\n    getOutput() {\r\n        let output = \"\";\r\n        for (let i=this.position; i<this.tape.length; i++) {\r\n            let char = this.tape[i];\r\n            if (char !== '#') {\r\n                output += char;\r\n            }\r\n        }\r\n        return output;\r\n    }\r\n\r\n    isDone() {\r\n        return this.state === '-1';\r\n    }\r\n\r\n    toString() {\r\n        let output = \"\";\r\n        for (let i=0; i<this.tape.length; i++) {\r\n            if (i === this.position) \r\n                output += '[' + this.tape[i] + ']';\r\n            else \r\n                output += this.tape[i];\r\n        }\r\n        return output; // + '  <q' + this.state + '>';\r\n    }\r\n\r\n}\r\n\r\nexport default TuringMachine;","import React, { Component } from 'react';\nimport Display from './Components/Display';\nimport Control from './Components/Control';\nimport Editor from './Components/Editor';\nimport './Css/App.css'\n\nimport Program from './Classes/Program';\nimport TuringMachine from './Classes/TuringMachine';\n\nclass App extends Component {\n\n  state = {\n    TM: new TuringMachine(),\n    program: new Program()\n  }\n\n  componentDidMount() {\n    const {TM} = this.state;\n    TM.setInput('111#11');\n    this.updateTM();\n  }\n\n  updateTM = async () => {\n    const {TM} = this.state;\n    this.setState({TM});\n  }\n\n  updateProgram = async () => {\n    const {program} = this.state;\n    this.setState({program});\n  }\n\n  render() {\n    const {TM, program} = this.state;\n    return (\n      <div className='App'>\n        <Display \n          TM={TM}\n          updateTM={this.updateTM} \n        />\n        <Control\n          TM={TM}\n          program={program} \n          updateTM={this.updateTM} \n        />\n        <Editor \n          TM={TM}\n          program={program} \n          updateTM={this.updateTM} \n          updateProgram={this.updateProgram} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}